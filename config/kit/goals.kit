with Quantities;
with Worlds;

package Goals is

type Goal_Status is (Complete, Waiting, In_Progress, Blocked, Canceled);

record Goal is
   Status : Goal_Status;
   key Faction;
   Priority : Positive;
   key Faction_Priority with Status, Faction, Priority;
end Goal;

record Transport_Goal : Goal is
   Commodity;
   From : World;
   To   : World;
   Quantity   : Quantity_Type;
   key Receive_Commodity with To, Commodity;
   key Send_Commodity with From, Commodity;
end Transport_Goal;

record World_Goal : Goal is
   key World;
end World_Goal;

record Resource_Goal : World_Goal is
   Resource;
   Quantity   : Quantity_Type;
   unique key Resource_Goal with Faction, World, Resource, Priority;
end Resource_Goal;

record Scan_World_Goal : World_Goal is
   unique key Scan_World_Goal with Faction, World;
   Minimum_Deposit : Long_Float;
end Scan_World_Goal;

record Scan_System_Goal : Goal is
   Star_System;
   unique key Scan_System_Goal with Faction, Star_System;
end Scan_System_Goal;

record Colonise_Goal : World_Goal is
   unique key Colonise_World_Goal with Faction, World;
end Colonise_Goal;

record Explore_Goal : World_Goal;

end Goals;
